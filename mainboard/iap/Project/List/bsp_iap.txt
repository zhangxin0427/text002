; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp_iap.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\bsp_iap.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\User -I..\User\bsp\inc -I..\User\bsp -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\MALLOC -I..\FatFs\src -I..\FatFs\src\option -I..\Iap -I"E:\Program Files\MDK 4.74\ARM\RV31\INC" -I"E:\Program Files\MDK 4.74\ARM\CMSIS\Include" -I"E:\Program Files\MDK 4.74\ARM\Inc\ST\STM32F10x" -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\obj\bsp_iap.crf ..\Iap\bsp_iap.c]
                          THUMB

                          AREA ||i.iap_load_app||, CODE, READONLY, ALIGN=2

                  iap_load_app PROC
;;;44     //appxaddr:用户代码起始地址.
;;;45     void iap_load_app(u32 appxaddr)
000000  b510              PUSH     {r4,lr}
;;;46     {
000002  4604              MOV      r4,r0
;;;47     	if(((*(vu32*)appxaddr)&0x2FFE0000)==0x20000000)	//检查栈顶地址是否合法.
000004  6820              LDR      r0,[r4,#0]
000006  4907              LDR      r1,|L1.36|
000008  4008              ANDS     r0,r0,r1
00000a  f1b05f00          CMP      r0,#0x20000000
00000e  d108              BNE      |L1.34|
;;;48     	{ 
;;;49     		jump2app=(iapfun)*(vu32*)(appxaddr+4);		//用户代码区第二个字为程序开始地址(复位地址)		
000010  6860              LDR      r0,[r4,#4]
000012  4905              LDR      r1,|L1.40|
000014  6008              STR      r0,[r1,#0]  ; jump2app
;;;50     		MSR_MSP(*(vu32*)appxaddr);					//初始化APP堆栈指针(用户代码区的第一个字用于存放栈顶地址)
000016  6820              LDR      r0,[r4,#0]
000018  f7fffffe          BL       MSR_MSP
;;;51     		jump2app();									//跳转到APP.	
00001c  4802              LDR      r0,|L1.40|
00001e  6800              LDR      r0,[r0,#0]  ; jump2app
000020  4780              BLX      r0
                  |L1.34|
;;;52     	}
;;;53     }		 
000022  bd10              POP      {r4,pc}
;;;54     
                          ENDP

                  |L1.36|
                          DCD      0x2ffe0000
                  |L1.40|
                          DCD      jump2app

                          AREA ||i.iap_write_appbin||, CODE, READONLY, ALIGN=1

                  iap_write_appbin PROC
;;;22     //appsize:应用程序大小(字节).
;;;23     void iap_write_appbin(u32 appxaddr,u8 *appbuf,u32 sdsize)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;24     {
000004  f5ad6d00          SUB      sp,sp,#0x800
000008  4607              MOV      r7,r0
00000a  4688              MOV      r8,r1
00000c  4614              MOV      r4,r2
;;;25     	u16 iapbuf[1024];  
;;;26     	u16 i=0;
00000e  2500              MOVS     r5,#0
;;;27     	u16 temp;
;;;28     	u32 fwaddr=appxaddr;//当前写入的地址
000010  46ba              MOV      r10,r7
;;;29     	u8 *dfu=appbuf;
000012  4646              MOV      r6,r8
;;;30     //	printf(" sdsize/2 = %d \r\n",sdsize/2);
;;;31     	for(i=0;i<sdsize/2;i++)	    	
000014  bf00              NOP      
000016  e00b              B        |L2.48|
                  |L2.24|
;;;32     		{
;;;33     			temp=(u16)dfu[1]<<8;
000018  7870              LDRB     r0,[r6,#1]
00001a  ea4f2900          LSL      r9,r0,#8
;;;34     			temp+=(u16)dfu[0];	  
00001e  7830              LDRB     r0,[r6,#0]
000020  4448              ADD      r0,r0,r9
000022  fa1ff980          UXTH     r9,r0
;;;35     			dfu+=2;//偏移2个字节
000026  1cb6              ADDS     r6,r6,#2
;;;36     			iapbuf[i]=temp;
000028  f82d9015          STRH     r9,[sp,r5,LSL #1]
00002c  1c68              ADDS     r0,r5,#1              ;31
00002e  b285              UXTH     r5,r0                 ;31
                  |L2.48|
000030  ebb50f54          CMP      r5,r4,LSR #1          ;31
000034  d3f0              BCC      |L2.24|
;;;37     
;;;38     		}
;;;39     		STM32_FLASH_Write(fwaddr,iapbuf,sdsize/2);
000036  f3c4024f          UBFX     r2,r4,#1,#16
00003a  4669              MOV      r1,sp
00003c  4650              MOV      r0,r10
00003e  f7fffffe          BL       STM32_FLASH_Write
;;;40     	
;;;41     }
000042  f50d6d00          ADD      sp,sp,#0x800
000046  e8bd87f0          POP      {r4-r10,pc}
;;;42     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  jump2app
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\Iap\\bsp_iap.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_iap_c_084511fe____REV16|
#line 114 "..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_iap_c_084511fe____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_iap_c_084511fe____REVSH|
#line 128
|__asm___9_bsp_iap_c_084511fe____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
